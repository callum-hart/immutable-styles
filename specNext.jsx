<>

{ /*
- Extend should be an attribute `extendFrom`, rather than naming convention.
   - Subclass is used on its own, i.e: `btn-primary`
- Extend from an element that doesn't have a className i.e: `p`
- Differentiate between subclass and modifier class:
   - Attribute `modifierFor`
   - Modifier class is used with original class, i.e: `btn btn--loading`
- Optimization, grouped selectors for `extendFrom` & `modifierFor`.
  - Grouping selectors doesn't do much in terms of generated CSS size. In some cases it increases CSS size.
- Source CSS property, add fileName && lineNumber to ruleset, i.e: _source: fileOne.iss.jsx:10
- Different types of extend, shallow & deep:
   - shallowExtend: copy styles from root node
   - deepExtend: copy styles from root node & its children
- Only use direct decendant selector (>) if ruleset contains inheritable CSS property.
  - Will this make it harder to detect overrides?
  - Will this make styles less resilient to changes in HTML?
*/ }


{ /*
NOTE: extendFrom & modifierFor are exactly the same expect from their usage in HTML.
What are the implications of using both modifierFor & extendFrom...?

*/ }

{ /* Extend from single node */ }

<form className='baseForm'>
  padding: 10px 15px;
  background: white;
  border: 1px solid grey;
</form>

<form extendFrom='baseForm' className='subForm'>
  border: 1px solid darkgrey;
  border-radius: 5px;
</form>

{/*
------------------------------------------------
HTML:

<form class="baseForm">
</form>

<form class="subForm">
</form>

------------------------------------------------
[Un-grouped selectors] CSS (generated by ISS):

form[class="baseForm"] {
  padding: 10px 15px;
  background: white;
  border: 1px solid grey;
}

form[class="subForm"] {
  padding: 10px 15px;
  background: white;
  border: 1px solid darkgrey;
  border-radius: 5px;
}

------------------------------------------------
[Grouped selectors] CSS (generated by ISS):

form[class="baseForm"],
form[class="subForm"] {
  padding: 10px 15px;
  background: white;
}

form[class="baseForm"] {
  border: 1px solid grey;
}

form[class="subForm"] {
  border: 1px solid darkgrey;
  border-radius: 5px;
}

------------------------------------------------
Conventional CSS (with overrides):

form.baseForm,
form.subForm {
  padding: 10px 15px;
  background: white;
  border: 1px solid grey;
}

form.subForm {
  border: 1px solid darkgrey;
  border-radius: 5px;
}

*/}


{ /* Extend from node & its children */ }

<form className='baseForm'>
  padding: 10px 15px;
  background: white;
  border: 1px solid grey;

  <input className='textField'>
    font-size: 14px;
    border-radius: 4px;
  </input>
</form>

<form extendFrom='baseForm' className='subForm'>
  border: 1px solid darkgrey;
  border-radius: 5px;
</form>

{ /*
------------------------------------------------
HTML:

<form class="baseForm">
  <input type="text" class="textField" />
</form>

<form class="subForm">
  <input type="text" class="textField" />
</form>

------------------------------------------------
[Un-grouped selectors] CSS (generated by ISS):

form[class="baseForm"] {
  padding: 10px 15px;
  background: white;
  border: 1px solid grey;
}

form[class="baseForm"] > input[class="textField"] {
  font-size: 14px;
  border-radius: 4px;
}

form[class="subForm"] {
  padding: 10px 15px;
  background: white;
  border: 1px solid darkgrey;
  border-radius: 5px;
}

form[class="subForm"] > input[class="textField"] {
  font-size: 14px;
  border-radius: 4px;
}

------------------------------------------------
[Grouped selectors] CSS (generated by ISS):

form[class="baseForm"],
form[class="subForm"] {
  padding: 10px 15px;
  background: white;
}

form[class="baseForm"] > input[class="textField"],
form[class="subForm"] > input[class="textField"] {
  font-size: 14px;
  border-radius: 4px;
}

form[class="baseForm"] {
  border: 1px solid grey;
}

form[class="subForm"] {
  border: 1px solid darkgrey;
  border-radius: 5px;
}

------------------------------------------------
Conventional CSS (with overrides):

form.baseForm,
form.subForm {
  padding: 10px 15px;
  background: white;
  border: 1px solid grey;
}

form.baseForm input.textField,
form.subForm input.textField {
  font-size: 14px;
  border-radius: 4px;
}

form.subForm {
  border: 1px solid darkgrey;
  border-radius: 5px;
}

*/ }


{ /* Modifier for single node */ }

<button className='btn'>
  padding: 10px 15px;
  border-radius: 4px;
  background: darkblue;
</button>

<button modifierFor='btn' className='saving'>
  background: lightblue;
</button>

{ /*
------------------------------------------------
HTML:

<button class="btn">
</button>

<button class="btn saving">
</button>

------------------------------------------------
[Un-grouped selectors] CSS (generated by ISS):

button[class="btn"] {
  padding: 10px 15px;
  border-radius: 4px;
  background: darkblue;
}

button[class="btn saving"] {
  padding: 10px 15px;
  border-radius: 4px;
  background: lightblue;
}

------------------------------------------------
[Grouped selectors] CSS (generated by ISS):

button[class="btn"],
button[class="btn saving"] {
  padding: 10px 15px;
  border-radius: 4px;
}

button[class="btn"] {
  background: darkblue;
}

button[class="btn saving"] {
  background: lightblue;
}

------------------------------------------------
Conventional CSS (with overrides):

button.btn {
  padding: 10px 15px;
  border-radius: 4px;
  background: darkblue;
}

button.btn.saving {
  background: lightblue;
}

*/ }


{ /* Modifier for node & its children */ }

<button className='btn'>
  padding: 10px 15px;
  border-radius: 4px;
  background: darkblue;

  <span className='icon'>
    width: 15px;
    height: 15px;
    color: darkgrey;
  </span>
</button>

<button modifierFor='btn' className='saving'>
  background: lightblue;

  <span className='icon'>
    color: lightgrey;
  </span>
</button>

{ /*
------------------------------------------------
HTML:

<button class="btn">
  <span class="icon"></span>
</button>

<button class="btn saving">
  <span class="icon"></span>
</button>

------------------------------------------------
[Un-grouped selectors] CSS (generated by ISS):

button[class="btn"] {
  padding: 10px 15px;
  border-radius: 4px;
  background: darkblue;
}

button[class="btn"] > span[class="icon"] {
  width: 15px;
  height: 15px;
  color: darkgrey;
}

button[class="btn saving"] {
  padding: 10px 15px;
  border-radius: 4px;
  background: lightblue;
}

button[class="btn saving"] > span[class="icon"] {
  width: 15px;
  height: 15px;
  color: lightgrey;
}

------------------------------------------------
[Grouped selectors] CSS (generated by ISS):

button[class="btn"],
button[class="btn saving"] {
  padding: 10px 15px;
  border-radius: 4px;
}

button[class="btn"] > span[class="icon"],
button[class="btn saving"] > span[class="icon"] {
  width: 15px;
  height: 15px;
}

button[class="btn"] {
  background: darkblue;
}

button[class="btn"] > span[class="icon"] {
  color: darkgrey;
}

button[class="btn saving"] {
  background: lightblue;
}

button[class="btn saving"] > span[class="icon"] {
  color: lightgrey;
}

------------------------------------------------
Conventional CSS (with overrides):

button.btn {
  padding: 10px 15px;
  border-radius: 4px;
  background: darkblue;
}

button.btn span.icon {
  width: 15px;
  height: 15px;
  color: darkgrey;
}

button.btn.saving {
  background: lightblue;
}

button.btn.saving span.icon {
  color: lightgrey;
}

*/}

{ /* Extend from and modifier */ }

<form className='baseForm'>
  padding: 10px 15px;
  background: white;
  border: 1px solid grey;
</form>

<form className='subForm' extendFrom='baseForm'>
  border: 1px solid darkgrey;
  border-radius: 5px;
</form>

<form className='disabled' modifierFor='subForm'>
  background: lightgrey;
  border: 1px solid lightgrey;
  pointer-events: none;
  opacity: 0.6;
</form>

{/*
------------------------------------------------
HTML:

<form class="baseForm">
</form>

<form class="subForm">
</form>

<form class="subForm disabled">
</form>

------------------------------------------------
[Un-grouped selectors] CSS (generated by ISS):

form[class="baseForm"] {
  padding: 10px 15px;
  background: white;
  border: 1px solid grey;
}

form[class="subForm"] {
  padding: 10px 15px;
  background: white;
  border: 1px solid darkgrey;
  border-radius: 5px;
}

form[class="subForm disabled"] {
  padding: 10px 15px;
  border-radius: 5px;
  background: lightgrey;
  border: 1px solid lightgrey;
  pointer-events: none;
  opacity: 0.6;
}

------------------------------------------------
[Grouped selectors] CSS (generated by ISS):

form[class="baseForm"],
form[class="subForm"] {
  background: white;
}

form[class="baseForm"] {
  border: 1px solid grey;
}

form[class="baseForm"],
form[class="subForm"],
form[class="subForm disabled"] {
  padding: 10px 15px;
}

form[class="subForm"] {
  border: 1px solid darkgrey;
}

form[class="subForm"],
form[class="subForm disabled"] {
  border-radius: 5px;
}

form[class="subForm disabled"] {
  background: lightgrey;
  border: 1px solid lightgrey;
  pointer-events: none;
  opacity: 0.6;
}

------------------------------------------------

Conventional CSS (with overrides):

form.baseForm,
form.subForm {
  padding: 10px 15px;
  background: white;
  border: 1px solid grey;
}

form.subForm {
  border: 1px solid darkgrey;
  border-radius: 5px;
}

form.subForm.disabled {
  background: lightgrey;
  border: 1px solid lightgrey;
  pointer-events: none;
  opacity: 0.6;
}

*/}

</>